name: Test Aiohttp App
on:
  push:
    branches:
      - main
#    paths-ignore:
#      - '.github/workflows/*'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get the repository code
        uses: actions/checkout@v4
      - name: Cache deps
        uses: actions/checkout@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build
      - name: Test Application
        run: pytest
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get the repository code
        uses: actions/checkout@v4
      - name: Cache deps
        uses: actions/checkout@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build
      - name: Lint Application
        run: |
          pip install pylint
          pylint --recursive=y --exit-zero app
  build:
    needs: [lint, test]
#    continue-on-error: True    Добавить, чтобы CI/CD продолжался при ошибках в этой job
    strategy:
      matrix:
        python-version: ['3.12', '3.10']
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get the repository code
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache deps
        uses: actions/checkout@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Build Application
        run: |
          python -m build
      - name: Deploy
        run: echo Deploying ....
